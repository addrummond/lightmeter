HFSDP
=====


Overview
--------

HFSDP is a master/slave protocol. Communication is initiated, and ended, by the
master. Data can be transmitted in both directions.

HFSDP supports multiple slaves but not multiple masters. In other words, it
should be possible to connect to multiple devices from a single laptop,
but attempting to connect from multiple laptops at once will produce undefined
results. This issue is largely mitigated by the inherently short range of
high frequency sound when generated by typical laptop/smartphone speakers.


Identifiers
-----------

Each master and slave has two identifiers. The first is a unique 8-byte
identifier. The second is an 8-byte 'type'.


Initial frequencies
---------------

HFSDP initially makes us of the following frequencies.

    * 18KHz data channel
    * 20KHz clock

A sine wave on each of these frequencies is used to encode a rectangular-wave
signal using amplitude modulation. The rectangular wave should be approximated
using the first 11 terms of the fourier series:

    (sum from n = 1 to 11 [ (2*sin(PI*n*d)*cos(2*PI*n*(t-(d/2))*f))/(n*PI) ]) + d

        where 0 <= d <= 1 controls the duty cycle, and
              f is frequency, t is time

The above equation derives a wave that starts high and remains high for the
fraction of its period specified by the duty cycle. The clock and data channels
encode a 126 baud binary signal. Thus, in the case where the signal transmitted
is 1010..., d = 0.5 and f = 126. If the signal is 11001100..., d = 1/2 and
f = 126/2. If the signal is 11101110..., d = 3/4 and f = 126/4.

Binary signals should be broken up into blocks of i zeroes followed by k ones
(in the case where the signal begins with a zero), or i ones followed by k zeroes
(in the case where the signal begins with a one). The appropriate rectangular wave
can then be generated for each block. The protocol is such that no more than
eight zeroes or ones will ever be transmitted in sequence. The maximum required
duty cycle is therefore 8/9. The 11-term fourier series generates a good square
wave approximation up to this duty cycle.

The approximation to a rectangular wave is used to simplify single sideband
encoding of the signal. The protocol does not currently use SSB, but this is
an anticipated future development.

Wolfram alpha expression for approximate square wave equation with f=10, d=0.5:

    plot sum (((2*sin(pi*n*0.5)*cos(2*pi*n*0.5*(x-(0.5/10))*10)))/(n*pi)) + 0.5/11, n = 1 to 11 from x = 0 to x = 1


Frequency negotiation
---------------------

The master may send a request to the slave to switch to a different pair of
frequencies. The slave may either accept or decline this request (but should
only decline if the frequencies are outside the range within which it can
transmit and receive).


Transmission of bytes
---------------------

The data channel is read on both the rising and falling edges of the clock
signal. Each 32-bit little-endian word on the data channel is encoded according
to odd parity Hamming(31,26), with bit 32 an additional odd parity bit.


Initiation
----------

To initiate communication, the master repeatedly sends the following sequence
of 26 bits 5 times:

    Least sig first
    10010111010010110101111010

    = 24826601 (decimal)

After each transmission, the master pauses for around half a second and listens
for a response from the slave. The slave should respond upon detecting one or
more instances of the above sequence of bits (i.e., it need not wait to
detect 5 in a row).


Messages
--------
